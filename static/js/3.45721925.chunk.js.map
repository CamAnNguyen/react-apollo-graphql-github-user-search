{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@heroicons/react/solid/esm/ChevronLeftIcon.js","../node_modules/@heroicons/react/solid/esm/ChevronRightIcon.js","../node_modules/@heroicons/react/solid/esm/SearchIcon.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ChevronLeftIcon","props","React","Object","assign","xmlns","viewBox","fill","fillRule","d","clipRule","ChevronRightIcon","SearchIcon","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","require","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","style","className","makePropGetter","hooks","meta","userProps","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","Comp","console","flexRender","component","proto","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","String","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","originalId","placeholderOf","Map","getFirstDefined","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable"],"mappings":"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","file":"static/js/3.45721925.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as React from \"react\";\n\nfunction ChevronLeftIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nexport default ChevronLeftIcon;","import * as React from \"react\";\n\nfunction ChevronRightIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nexport default ChevronRightIcon;","import * as React from \"react\";\n\nfunction SearchIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nexport default SearchIcon;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}