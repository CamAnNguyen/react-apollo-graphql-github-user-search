{"version":3,"sources":["store/types.ts","utils/network.ts","store/ui/actions.ts","store/users/actions.ts","store/users/selectors.ts","pages/Home/components/Buttons.tsx","pages/Home/components/Icons.tsx","pages/Home/components/Table.tsx","pages/Home/index.tsx"],"names":["ResourceState","createRequest","url","options","a","response","link","error","defaultOptions","headers","initOptions","mode","fetch","res","get","json","console","setLoading","payload","type","UIActions","SET_LOADING","fetchUsers","query","page","pageSize","dispatch","GITHUB_USER_SEARCH_API","method","errMess","message","UserActions","FETCH_USERS_ERROR","userLoginList","items","map","u","login","fetchUsersInfo","FETCH_USERS_SUCCESS","Promise","all","GITHUB_USER_INFO_API","values","data","value","filter","v","FETCH_USERS_INFO_SUCCESS","getUsers","createSelector","state","users","PageButton","children","className","props","SortIcon","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","SortUpIcon","SortDownIcon","AvatarCell","column","row","src","original","imgAccessor","alt","usernameAccessor","InformationCell","bioAccessor","blogAccessor","followersAccessor","followingAccessor","pubReposAccessor","Table","columns","fetchData","pageIndex","totalCount","pageCount","Math","ceil","useTable","initialState","manualPagination","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","useEffect","length","startRow","endRow","min","headerGroup","getHeaderGroupProps","scope","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","role","id","defaultMessage","aria-label","onClick","max","aria-hidden","Home","textInput","useRef","useSelector","currentPage","useDispatch","start","end","slice","formatMessage","useIntl","useMemo","Header","accessor","Cell","companyAccessor","useCallback","current","SET_PAGE","setPage","x-model","placeholder","ref","onKeyUp","e","key","keyCode"],"mappings":"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","file":"static/js/4.2f23edc7.chunk.js","sourcesContent":["import { ThunkAction } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { State } from \"./state\";\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  State,\n  unknown,\n  Action<string>\n>;\n\nexport enum ResourceState {\n  LOADING = \"loading\",\n  NOT_FOUND = \"not found\",\n  FOUND = \"found\",\n}\n","import { ResourceState } from \"store/types\";\n\nexport async function createRequest<T extends {} = any>(\n  url: string,\n  options?: RequestInit\n) {\n  let response = {} as T;\n  let link = \"\" as string | null;\n  let error = null;\n\n  const defaultOptions: RequestInit = {\n    headers: { \"Content-Type\": \"application/json\" },\n  };\n\n  const initOptions: RequestInit = {\n    mode: \"cors\",\n    ...defaultOptions,\n    headers: {\n      ...defaultOptions.headers,\n      ...options?.headers,\n    },\n    ...options,\n  };\n\n  try {\n    const res = await fetch(url, initOptions);\n\n    link = res.headers.get('Link');\n    response = await res.json();\n  } catch (e) {\n    error = e;\n    console.error(\"Network error: \", error);\n  }\n\n  return { response, error, link };\n}\n\nexport async function getJson(path: string, params?: Record<string, any>) {\n  const query = (params && `?${new URLSearchParams(params).toString()}`) ?? \"\";\n\n  return await createRequest(path + query, { method: \"GET\" });\n}\n\nexport async function postJson(path: string, body: Record<string, any> = {}) {\n  return await createRequest(path, {\n    method: \"POST\",\n    body: JSON.stringify(body),\n  });\n}\n\nexport function isResourceLoading(status: ResourceState): boolean {\n  return status === ResourceState.LOADING;\n}\n\nexport function isResourceNotFoundOrLoading(status: ResourceState): boolean {\n  return status === ResourceState.NOT_FOUND || status === ResourceState.LOADING;\n}\n\nexport function isResourceFound(status: ResourceState): boolean {\n  return status === ResourceState.FOUND;\n}\n","import { Action } from \"redux\";\n\nimport { Language } from \"i18n\";\n\nimport { UIActions } from \"./types\";\n\nexport interface SetLoading extends Action {\n  type: UIActions.SET_LOADING;\n  payload: boolean;\n}\n\nexport interface SetLanguage extends Action {\n  type: UIActions.SET_LANGUAGE;\n  payload: Language;\n}\n\nexport type UIActionTypes = SetLoading | SetLanguage;\n\nexport function setLoading(payload: boolean): SetLoading {\n  return { type: UIActions.SET_LOADING, payload };\n}\n\nexport function setLanguage(payload: Language): SetLanguage {\n  return { type: UIActions.SET_LANGUAGE, payload };\n}\n","import { Action } from \"redux\";\n\nimport { AppThunk } from \"store/types\";\nimport { createRequest } from \"utils/network\";\nimport {\n  GITHUB_USER_SEARCH_API,\n  GITHUB_USER_INFO_API,\n} from \"routes/constants\";\n\nimport {\n  User,\n  UserInfo,\n  UserActions,\n  UserSearch,\n  UserSearchResult\n} from \"./types\";\nimport { setLoading } from \"store/ui/actions\";\n\nexport interface FetchUsers extends Action {\n  type: UserActions.FETCH_USERS;\n  payload: UserSearch;\n}\n\nexport interface FetchUsersResult extends Action {\n  type: UserActions.FETCH_USERS_SUCCESS |\n        UserActions.FETCH_USERS_ERROR;\n  payload: UserSearchResult;\n}\n\nexport interface FetchUsersInfoResult extends Action {\n  type: UserActions.FETCH_USERS_INFO_SUCCESS;\n  payload: UserInfo[];\n}\n\nexport interface SetPage extends Action {\n  type: UserActions.SET_PAGE;\n  payload: { page: number };\n}\n\nexport type UserActionTypes = FetchUsers | FetchUsersResult |\n  FetchUsersInfoResult | SetPage;\n\nexport function fetchUsers(\n  query: string,\n  page: number = 0,\n  pageSize: number = 10\n): AppThunk {\n  return async (dispatch: Function) => {\n    dispatch(setLoading(true));\n\n    const { response, error } = await createRequest(\n      `${GITHUB_USER_SEARCH_API}?q=${query}&page=${page + 1}&per_page=${pageSize}`,\n      {\n        method: \"GET\",\n        headers: { 'Accept': 'application/vnd.github.v3+json' }\n      }\n    );\n\n    dispatch(setLoading(false));\n\n    const errMess = error ? error.message : response.message;\n    if (errMess) {\n      return dispatch({\n        type: UserActions.FETCH_USERS_ERROR,\n        payload: errMess,\n      });\n    } \n\n    const userLoginList = response.items.map((u: User) => u.login);\n    dispatch(fetchUsersInfo(userLoginList));\n\n    return dispatch({\n      type: UserActions.FETCH_USERS_SUCCESS,\n      payload: { ...response, query, page, pageSize },\n    });\n  };\n}\n\nexport function fetchUsersInfo(userLoginList: string[]): AppThunk {\n  return async (dispatch: Function) => {\n    dispatch(setLoading(true));\n\n    const values = await Promise.all(userLoginList.map(async (login) => (\n      createRequest(\n        `${GITHUB_USER_INFO_API}/${login}`,\n        {\n          method: \"GET\",\n          headers: { 'Accept': 'application/vnd.github.v3+json' }\n        }\n      )\n    )));\n\n    dispatch(setLoading(false));\n\n    const data = values.map((value) => {\n      const errMess = value.error ? value.error.message : value.response.message;\n      if (errMess) {\n        return null;\n      }\n\n      return value.response;\n    }).filter(v => v);\n\n    return dispatch({\n      type: UserActions.FETCH_USERS_INFO_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nexport const setPage = (page: number = 1) => ({\n  type: UserActions.SET_PAGE,\n  payload: { page }\n});\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../state\";\nimport { UsersState } from \"./reducer\";\n\nexport function getUser(state: State) {\n  return state.users;\n}\n\nexport const getUsers = createSelector(\n  getUser,\n  (users: UsersState) => users\n);\n","import { ButtonHTMLAttributes } from \"react\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  readonly className?: string;\n  readonly children: React.ReactNode;\n}\n\nexport const Button = ({ children, className, ...props }: ButtonProps) => (\n  <button\n    type=\"button\"\n    {...props}\n    className={`relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 ${className || \"\"}`}\n  >\n    {children}\n  </button>\n)\n\nexport const PageButton = ({ children, className, ...props }: ButtonProps) => (\n  <button\n    type=\"button\"\n    {...props}\n    className={`relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 ${className || \"\"}`}\n  >\n    {children}\n  </button>\n)\n","interface IconProps {\n  readonly className: string;\n}\n\nexport const SortIcon = ({ className }: IconProps) => (\n  <svg className={className} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 320 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"></path></svg>\n)\n\nexport const SortUpIcon = ({ className }: IconProps) => (\n  <svg className={className} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 320 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z\"></path></svg>\n)\n\nexport const SortDownIcon = ({ className }: IconProps) => (\n  <svg className={className} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 320 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"></path></svg>\n)\n","import { useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\n\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\n\nimport { PageButton } from \"./Buttons\";\nimport { SortIcon, SortUpIcon, SortDownIcon } from \"./Icons\";\n\ninterface CellProps {\n  readonly value: string;\n  readonly column: any;\n  readonly row: any;\n};\n\nexport const AvatarCell = ({ value, column, row }: CellProps) => (\n  <div className=\"flex items-center\">\n    <div className=\"flex-shrink-0 h-10 w-10\">\n      <img\n        className=\"h-10 w-10 rounded-full\"\n        src={row.original[column.imgAccessor]}\n        alt=\"\"\n      />\n    </div>\n    <div className=\"ml-4\">\n      <div className=\"text-sm font-medium text-gray-900\">{value}</div>\n      <div className=\"text-sm text-gray-500\">\n        {row.original[column.usernameAccessor]}\n      </div>\n    </div>\n  </div>\n);\n\nexport const InformationCell = ({ value, column, row }: CellProps) => (\n  <div className=\"flex items-center\">\n    <div>\n      <div className=\"text-sm font-medium text-gray-900\">\n        {value}\n      </div>\n      <div className=\"text-sm text-gray-500 break-words\">\n        {row.original[column.bioAccessor]}\n      </div>\n      <div className=\"text-sm\">\n        <span className=\"text-gray-500 font-medium\">\n          Blog:\n        </span>\n        <span className=\"text-gray-500 ml-0.5\">\n          {row.original[column.blogAccessor]}\n        </span>\n      </div>\n      <div className=\"text-sm\">\n        <span className=\"text-gray-500 font-medium\">\n          Followers:\n        </span>\n        <span className=\"text-gray-500 ml-0.5\">\n          {row.original[column.followersAccessor]}\n        </span>\n        <span className=\"text-gray-500 font-medium ml-0.5\">\n          - Following:\n        </span>\n        <span className=\"text-gray-500 ml-0.5\">\n          {row.original[column.followingAccessor]}\n        </span>\n        <span className=\"text-gray-500 font-medium ml-0.5\">\n          - Public Repositories:\n        </span>\n        <span className=\"text-gray-500 ml-0.5\">\n          {row.original[column.pubReposAccessor]}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\ninterface TableProps {\n  readonly columns: any[];\n  readonly data: Array<any>;\n  readonly totalCount: number;\n  readonly pageSize: number;\n  readonly pageIndex: number;\n  readonly fetchData: ({ pageSize, pageIndex }: any) => void;\n};\n\nconst Table = ({\n  columns,\n  data,\n  fetchData,\n  pageIndex,\n  totalCount,\n  pageSize\n}: TableProps) => {\n  const pageCount = Math.ceil(totalCount / pageSize);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n  } = useTable({\n    columns,\n    data,\n    initialState: { pageIndex: 0, pageSize: 10 },\n    manualPagination: true,\n    pageCount,\n  },\n    useSortBy,\n    usePagination,\n  )\n\n  useEffect(() => {\n    fetchData({ pageIndex: pageIndex, pageSize });\n  }, [fetchData, pageIndex, pageSize]);\n\n  const nextPage = () => {\n    if ((pageIndex + 1) * pageSize < totalCount) {\n      fetchData({ pageIndex: pageIndex + 1, pageSize });\n    }\n  };\n\n  const previousPage = () => {\n    fetchData({ pageIndex: Math.max(0, pageIndex - 1), pageSize });\n  };\n\n  if (!data || data.length === 0) {\n    return <span />;\n  }\n\n  const startRow = pageIndex * pageSize + 1;\n  const endRow = Math.min(totalCount, startRow + pageSize - 1);\n\n  return (\n    <>\n      <div className=\"mt-4 flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n              <table {...getTableProps()} className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map(column => (\n                        <th\n                          scope=\"col\"\n                          className=\"group px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                          {...column.getHeaderProps(column.getSortByToggleProps())}\n                        >\n                          <div className=\"flex items-center justify-between\">\n                            {column.render('Header')}\n                            <span>\n                              {column.isSorted\n                                ? column.isSortedDesc\n                                  ? <SortDownIcon className=\"w-4 h-4 text-gray-400\" />\n                                  : <SortUpIcon className=\"w-4 h-4 text-gray-400\" />\n                                : (\n                                  <SortIcon className=\"w-4 h-4 text-gray-400 opacity-0 group-hover:opacity-100\" />\n                                )}\n                            </span>\n                          </div>\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody\n                  {...getTableBodyProps()}\n                  className=\"bg-white divide-y divide-gray-200\"\n                >\n                  {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                      <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => (\n                          <td\n                            {...cell.getCellProps()}\n                            className=\"px-6 py-4\"\n                            role=\"cell\"\n                          >\n                            <div className=\"text-sm text-gray-500\">\n                              {cell.render('Cell')}\n                            </div>\n                          </td>\n                        ))}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"py-3 flex items-center justify-between\">\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n          <div className=\"flex gap-x-2 items-baseline\">\n            <FormattedMessage id=\"table/showing\" defaultMessage=\"Showing\" />\n            {` ${startRow} - ${endRow} `}\n            <FormattedMessage id=\"table/of\" defaultMessage=\"of\" />\n            {` ${totalCount} `}\n            <FormattedMessage id=\"table/records\" defaultMessage=\"records\" />\n          </div>\n          <div>\n            <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n              <PageButton onClick={() => previousPage()}>\n                <ChevronLeftIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </PageButton>\n              <PageButton>\n                <span className=\"text-sm text-gray-700\">\n                  <span className=\"font-medium mx-1\">\n                    {pageIndex + 1}\n                  </span>\n                  /\n                  <span className=\"font-medium mx-1\">{pageCount}</span>\n                </span>\n              </PageButton>\n              <PageButton onClick={() => nextPage()}>\n                <ChevronRightIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </PageButton>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Table;\n","import { useCallback, useMemo, useRef } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { SearchIcon } from \"@heroicons/react/solid\";\n\nimport { fetchUsers, setPage } from \"store/users/actions\";\nimport { getUsers } from \"store/users/selectors\";\n\nimport Table, { AvatarCell, InformationCell } from './components/Table';\n\nconst Home = () => {\n  const textInput  = useRef() as React.MutableRefObject<HTMLInputElement>;\n\n  const { data: users, currentPage, pageSize, totalCount } = useSelector(getUsers);\n\n  const dispatch = useDispatch();\n\n  const start = currentPage * pageSize;\n  const end = start + pageSize;\n  const data = users.slice(start, end);\n\n  const tryFindUsers = (e: any) => {\n    let check = e.key === 'Enter' || e.keyCode === 13;\n    if (!check) return;\n\n    if (textInput && textInput.current && textInput.current.value) {\n      dispatch(fetchUsers(textInput.current.value));\n    }\n  }\n\n  const { formatMessage } = useIntl();\n\n  const columns = useMemo(() => [\n    {\n      Header: formatMessage({\n        id: \"home/user-name-header\",\n        defaultMessage: \"User Name\",\n      }),\n      accessor: 'name',\n      Cell: AvatarCell,\n      imgAccessor: \"avatar_url\",\n      usernameAccessor: \"login\",\n    },\n    {\n      Header: formatMessage({\n        id: \"home/info-header\",\n        defaultMessage: \"Information\",\n      }),\n      Cell: InformationCell,\n      accessor: 'location',\n      bioAccessor: 'bio',\n      blogAccessor: 'blog',\n      companyAccessor: 'company',\n      followersAccessor: 'followers',\n      followingAccessor: 'following',\n      pubReposAccessor: 'public_repos',\n    },\n  ], [formatMessage]);\n\n  const fetchData = useCallback(({ pageIndex, pageSize }) => {\n    const check = textInput && textInput.current && textInput.current.value;\n    if (!check) return;\n\n    const startRow = pageSize * pageIndex;\n    const endRow = startRow + pageSize;\n\n    if (endRow > users.length) {\n      dispatch(fetchUsers(textInput.current.value, pageIndex, pageSize));\n    } else {\n      dispatch(setPage(pageIndex));\n    }\n  }, [dispatch, textInput, users]);\n\n  return (\n    <div className=\"main\">\n      <div className=\"px-4 sm:px-8 lg:px-16 xl:px-20 mx-auto\">\n        <div className=\"hero\">\n          <div className=\"hero-headline flex flex-col items-center justify-center pt-12 text-center\">\n            <h1 className=\" font-bold text-3xl text-gray-900\">\n              <FormattedMessage id=\"home/header\" defaultMessage=\"GitHub User Search\" />\n            </h1>\n          </div>\n\n          <div className=\"box pt-6\">\n            <div className=\"box-wrapper\">\n              <div className=\" bg-white rounded flex items-center w-full p-3 shadow-sm border border-gray-200\">\n                <button className=\"outline-none focus:outline-none\">\n                  <SearchIcon className=\"w-5 text-gray-600 h-5 cursor-pointer\" />\n                </button>\n                <input\n                  x-model=\"q\"\n                  className=\"w-full pl-4 text-sm outline-none focus:outline-none bg-transparent\"\n                  type=\"search\"\n                  placeholder={formatMessage({\n                    id: \"home/search-placeholder\",\n                    defaultMessage: \"Search user name\",\n                  })}\n                  ref={textInput}\n                  onKeyUp={tryFindUsers}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <Table\n              columns={columns}\n              data={data}\n              fetchData={fetchData}\n              pageIndex={currentPage}\n              totalCount={totalCount}\n              pageSize={pageSize}\n            />\n          </div>\n      </div>\n    </div>\n    </div>\n  )\n};\n\nexport default Home;\n"],"sourceRoot":""}