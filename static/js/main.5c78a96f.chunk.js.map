{"version":3,"sources":["store/users/types.ts","store/ui/types.ts","routes/constants.ts","i18n/index.ts","store/ui/selectors.ts","components/Loader/index.tsx","components/AppLoader/index.tsx","routes/AppRouter.tsx","App.tsx","store/actions.ts","store/ui/reducer.ts","store/users/reducer.ts","store/reducers.ts","store/state.ts","store/index.ts","reportWebVitals.ts","index.tsx"],"names":["UserActions","UIActions","HOME_PATH","GITHUB_BASE_API","GITHUB_USER_INFO_API","GITHUB_USER_SEARCH_API","strings","messages","en","Object","fromEntries","map","str","id","defaultMessage","intlCache","createIntlCache","getUI","state","ui","getLanguage","createSelector","language","isLoading","loading","Loader","className","AppLoader","useSelector","Fragment","Home","lazy","AppRouter","fallback","exact","path","component","routes","App","StoreActionTypes","intl","createIntl","locale","makeIntl","value","uiInitialState","localStorage","getItem","usersInitialState","query","data","totalCount","currentPage","pageSize","incompleteResults","rootReducers","combineReducers","action","type","SET_LOADING","payload","SET_LANGUAGE","setItem","users","FETCH_USERS_SUCCESS","items","total_count","incomplete_results","page","concat","FETCH_USERS_INFO_SUCCESS","user","info","filter","d","login","FETCH_USERS_ERROR","SET_PAGE","initialState","composeEnhancers","window","compose","store","createStore","RESET_STORE","undefined","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c78a96f.chunk.js","sourcesContent":["export enum UserActions {\n  FETCH_USERS = \"user/FETCH_USERS\",\n  FETCH_USERS_SUCCESS = \"user/FETCH_USERS_SUCCESS\",\n  FETCH_USERS_ERROR = \"user/FETCH_USERS_ERROR\",\n  FETCH_USERS_INFO_SUCCESS = \"user/FETCH_USERS_INFO_SUCCESS\",\n  SET_PAGE = \"user/SET_PAGE\"\n};\n\nexport interface User {\n  id: number;\n  login: string;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  score: number;\n};\n\nexport interface UserInfo {\n  avatar_url: string;\n  bio: string;\n  blog: string;\n  company: string;\n  created_at: \"2015-02-11T13:05:09Z\";\n  email: null;\n  events_url: string;\n  followers: number;\n  following: number;\n  gravatar_id: \"\";\n  html_url: string;\n  location: string;\n  login: string;\n  name: string;\n  public_gists: number;\n  public_repos: number;\n  twitter_username: string;\n};\n\nexport interface UserSearchResult {\n  incomplete_results: boolean;\n  items: Array<User>;\n  total_count: number;\n  fetchId: number;\n  query: string;\n  page: number;\n  pageSize: number;\n};\n\nexport interface UserSearch {\n  query: string;\n  page: number;\n  pageSize: number;\n};","export enum UIActions {\n  SET_LANGUAGE = \"ui/SET_LANGUAGE\",\n  SET_LOADING = \"ui/SET_LOADING\",\n}\n","export const HOME_PATH = \"/home\";\n\nexport const GITHUB_BASE_API = \"https://api.github.com\";\nexport const GITHUB_USER_INFO_API = `${GITHUB_BASE_API}/users`;\nexport const GITHUB_USER_SEARCH_API = `${GITHUB_BASE_API}/search/users`;","import { createIntl, createIntlCache, IntlShape } from \"react-intl\";\n\nimport en from \"./languages/en.json\";\n\ntype Message = typeof en[number];\n\nfunction convertToKeyValuePair(strings: Message[]) {\n  return Object.fromEntries(strings.map((str) => [str.id, str.defaultMessage]));\n}\n\nexport const displayLanguages = {\n  default: \"en\",\n  additional: [],\n};\n\nexport const messages = {\n  en: convertToKeyValuePair(en),\n};\n\nexport type Language = keyof typeof messages;\nexport const defaultLanguage = displayLanguages.default;\n\nconst intlCache = createIntlCache();\n\nexport let intl: IntlShape;\n\nexport function makeIntl(language: any, messages: any) {\n  intl = createIntl(\n    {\n      locale: language,\n      messages: messages[language],\n    },\n    intlCache\n  );\n  return intl;\n}\n","import { createSelector } from \"reselect\";\n\nimport { State } from \"../state\";\nimport { UIState } from \"./reducer\";\n\nexport function getUI(state: State) {\n  return state.ui;\n}\n\nexport const getLanguage = createSelector(getUI, (ui: UIState) => ui.language);\nexport const isLoading = createSelector(getUI, (ui: UIState) => ui.loading);\n","\nimport { FormattedMessage } from \"react-intl\";\n\nimport \"./index.scss\";\n\nexport function Loader() {\n  return (\n    <div className=\"fixed top-0 left-0 right-0 bottom-0 w-full h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center\">\n      <div className=\"loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4\"></div>\n      <h2 className=\"text-center text-white text-xl font-semibold\">\n        <FormattedMessage id=\"loader/loading\" defaultMessage=\"Loading ...\" />\n      </h2>\n      <p className=\"w-1/3 text-center text-white\">\n        <FormattedMessage\n          id=\"loader/loading-message\"\n          defaultMessage=\"This may take a few seconds, please don't close this page.\"\n        />\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { isLoading } from \"store/ui/selectors\";\nimport { Loader } from \"components/Loader\";\n\nexport function AppLoader() {\n  const loading = useSelector(isLoading);\n\n  return <React.Fragment>{loading ? <Loader /> : null}</React.Fragment>;\n}\n","import { lazy, Suspense } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport { Loader } from \"components/Loader\";\n\nimport * as routes from \"./constants\";\nimport { history } from \"./history\";\n\nconst Home = lazy(() => import(\"pages/Home\"));\n\nexport function AppRouter() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path={routes.HOME_PATH} component={Home} />\n        </Switch>\n      </HashRouter>\n    </Suspense>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { RawIntlProvider } from \"react-intl\";\n\nimport { makeIntl, messages } from \"i18n\";\nimport { AppLoader } from \"components/AppLoader\";\nimport { getLanguage } from \"store/ui/selectors\";\nimport { AppRouter } from \"routes/AppRouter\";\n\nimport './App.scss';\n\nfunction App() {\n  const language = useSelector(getLanguage);\n  const intl = makeIntl(language, messages);\n\n  return (\n    <RawIntlProvider value={intl}>\n      <AppLoader />\n      <AppRouter />\n    </RawIntlProvider>\n  );\n}\n\nexport default App;","export enum StoreActionTypes {\n  RESET_STORE = \"RESET_STORE\",\n}\n\nexport function resetStore() {\n  return { type: StoreActionTypes.RESET_STORE };\n}\n","import { UIActionTypes } from \"./actions\";\nimport { UIActions } from \"./types\";\n\nimport { Language } from \"i18n\";\n\nexport const uiInitialState = {\n  language: (localStorage.getItem(\"language\") || \"en\") as Language,\n  loading: false as boolean,\n};\n\nexport type UIState = typeof uiInitialState;\n\nexport function uiReducer(\n  state: UIState = uiInitialState,\n  action: UIActionTypes\n): UIState {\n  switch (action.type) {\n    case UIActions.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case UIActions.SET_LANGUAGE:\n      localStorage.setItem(\"language\", action.payload);\n\n      return {\n        ...state,\n        language: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { UserActionTypes } from \"./actions\";\nimport { User, UserActions } from \"./types\";\n\nexport const usersInitialState = {\n  query: \"\",\n  data: [] as Array<User>,\n  totalCount: 0,\n  currentPage: 0,\n  pageSize: 10,\n  incompleteResults: false,\n};\n\nexport interface UsersState {\n  query: string;\n  data: Array<User>,\n  totalCount: number,\n  currentPage: number,\n  pageSize: number,\n  incompleteResults: boolean\n}\n\nexport function usersReducer(\n  state: UsersState = usersInitialState,\n  action: UserActionTypes\n): UsersState {\n  if (!action.payload) return state;\n\n  switch (action.type) {\n    case UserActions.FETCH_USERS_SUCCESS:\n      const {\n        items,\n        total_count,\n        incomplete_results,\n        query,\n        page\n      } = action.payload;\n\n      return {\n        ...state,\n        query,\n        totalCount: total_count,\n        incompleteResults: incomplete_results,\n        data: query === state.query ? state.data.concat(items) : items,\n        currentPage: page\n      };\n    case UserActions.FETCH_USERS_INFO_SUCCESS:\n      return {\n        ...state,\n        data: state.data.map(user => {\n          const info = action.payload.filter(d => d.login === user.login)[0];\n          if (!info) return user;\n\n          return {\n            ...user,\n            ...info\n          }\n        }),\n      };\n    case UserActions.FETCH_USERS_ERROR:\n      return usersInitialState;\n    case UserActions.SET_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload.page\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { State } from \"./state\";\nimport { uiReducer } from \"./ui/reducer\";\nimport { usersReducer } from \"./users/reducer\";\n\nexport const rootReducers = combineReducers<State>({\n  ui: uiReducer,\n  users: usersReducer,\n});\n","import { uiInitialState } from \"./ui/reducer\";\nimport { usersInitialState } from \"./users/reducer\";\n\nexport const initialState = {\n  ui: uiInitialState,\n  users: usersInitialState,\n};\n\nexport type State = typeof initialState;\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  CombinedState,\n  AnyAction,\n} from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport { StoreActionTypes } from \"./actions\";\nimport { rootReducers } from \"./reducers\";\nimport { initialState, State } from \"./state\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  window[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] || compose;\n\nconst enhancedRootReducers = (\n  state: CombinedState<State> | undefined,\n  action: AnyAction\n) => {\n  if (action.type === StoreActionTypes.RESET_STORE) {\n    return rootReducers(undefined, action);\n  }\n\n  return rootReducers(state, action);\n};\n\nexport const store = createStore(\n  enhancedRootReducers,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport './index.css';\nimport App from './App';\n\nimport { store } from \"./store\";\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}